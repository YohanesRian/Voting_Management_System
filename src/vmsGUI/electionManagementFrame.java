package vmsGUI;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vms.election;
import vms.electionCount;
import vms.electionManagement;
import vms.fileAdmin;
import vms.fileDatabase;
import vms.user;

public class electionManagementFrame extends javax.swing.JFrame {

    user vo;
    
    public electionManagementFrame() {
        initComponents();
    }
    
    public electionManagementFrame(user vo) {
        initComponents();
        this.vo = vo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        cbElectionName = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JButton btnAdd = new javax.swing.JButton();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        cbVoterName = new javax.swing.JComboBox<>();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tableVoter = new javax.swing.JTable();
        javax.swing.JButton btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JLabel();
        btnClose = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Election Management");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(16, 161, 157));

        jPanel2.setBackground(new java.awt.Color(250, 243, 227));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        cbElectionName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cbElectionName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cbElectionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbElectionNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bebas", 1, 60)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Election manangement");

        btnAdd.setBackground(new java.awt.Color(79, 193, 132));
        btnAdd.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(250, 243, 227));
        btnAdd.setText("ADD");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel2.setText("Election Name");

        jLabel3.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel3.setText("Voter Name");

        cbVoterName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cbVoterName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        tableVoter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableVoter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Election Name", "Voter Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableVoter.setGridColor(new java.awt.Color(0, 0, 0));
        tableVoter.setMinimumSize(new java.awt.Dimension(40, 0));
        tableVoter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableVoterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableVoter);
        if (tableVoter.getColumnModel().getColumnCount() > 0) {
            tableVoter.getColumnModel().getColumn(0).setResizable(false);
            tableVoter.getColumnModel().getColumn(1).setResizable(false);
            tableVoter.getColumnModel().getColumn(2).setResizable(false);
        }

        btnDelete.setBackground(new java.awt.Color(216, 84, 105));
        btnDelete.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(250, 243, 227));
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Bebas", 2, 24)); // NOI18N
        btnView.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnView.setText("View Voted Status >  ");
        btnView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Close.png"))); // NOI18N
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbElectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbVoterName, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addGap(311, 311, 311)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnView)))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbElectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbVoterName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(cbElectionName.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Please create new election name", "Empty Election Name", JOptionPane.ERROR_MESSAGE);
        }
        else if(cbVoterName.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Please add new voter", "Empty Voter Name", JOptionPane.ERROR_MESSAGE);
        }
        else{
            electionManagement<String> em = new electionManagement(cbElectionName.getSelectedItem().toString(), cbVoterName.getSelectedItem(), false);
            DefaultTableModel model = (DefaultTableModel) tableVoter.getModel();
            boolean check = false;
            for(int i = 0; i < model.getRowCount(); i++){
                if(em.isSameElectionName(model.getValueAt(i, 0).toString()) && em.isSameVoterName(model.getValueAt(i, 1).toString())){
                    check = true;
                    break;
                }
            }
            if(check){
                JOptionPane.showMessageDialog(this, ("Already registered!"), "Already Registered", JOptionPane.ERROR_MESSAGE);
            }
            else{
                model.addRow(new Object[]{em.getElectionName(), em.getVoterName(), em.getStatus()});
                fileDatabase fd = new fileDatabase(model.getDataVector(), "ElectionManagement");
                fd.saveFile();
                
                fd = new fileDatabase("Election");
                Vector<Vector> temp = fd.recovery();
                for(int i = 0; i < temp.size(); i++){
                    Vector rt = temp.get(i);
                    electionCount elc = new electionCount(rt.get(0).toString(), (boolean) rt.get(1), (int) rt.get(2), (int) rt.get(3));
                    if(em.isSameElectionName(elc.getElectionName())){
                        elc.addTotalVoter();
                        rt.set(2, elc.getTotalVoter());
                        temp.set(i, rt);
                        break;
                    }
                }
                fd = new fileDatabase(temp, "Election");
                fd.saveFile();
                JOptionPane.showMessageDialog(this, "Success", "Success", JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tableVoterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableVoterMouseClicked

    }//GEN-LAST:event_tableVoterMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tableVoter.getSelectedRow();
        if(row >= 0){
            DefaultTableModel model = (DefaultTableModel) tableVoter.getModel();
            election el = new election(model.getValueAt(row, 0).toString(), false);
            model.removeRow(row);
            fileDatabase fd = new fileDatabase(model.getDataVector(), "ElectionManagement");
            fd.saveFile();
            
            fd = new fileDatabase("Election");
            Vector<Vector> temp = fd.recovery();
            for(int i = 0; i < temp.size(); i++){
                Vector rt = temp.get(i);
                electionCount elc = new electionCount(rt.get(0).toString(), (boolean) rt.get(1), (int) rt.get(2), (int) rt.get(3));
                if(elc.isSameElectionName(el.getElectionName())){
                    elc.subTotalVoter();
                    rt.set(2, elc.getTotalVoter());
                    temp.set(i, rt);
                    break;
                }
            }
            fd = new fileDatabase(temp, "Election");
            fd.saveFile();
            JOptionPane.showMessageDialog(this, "Delete Success", "Delete Success", JOptionPane.PLAIN_MESSAGE);
        }
        else{
           JOptionPane.showMessageDialog(this, "No row is selected!", "No Selected row", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(this.vo == null){
            JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
            new loginFrame().setVisible(true);
            this.dispose();
        }
        else{
            fileAdmin fa = new fileAdmin();
            user<String, String, String> admin = fa.getObj(); 
            if(vo.isSameName(admin.getName()) && vo.isSameUname(admin.getUname()) && vo.isSamePass(admin.getPass())){
                fileDatabase fd = new fileDatabase("Election");
                Vector<Vector> temp = fd.recovery();
                if(temp != null){
                    for(int i = 0; i < temp.size(); i++){
                        Vector row = temp.get(i);
                        election el = new election(row.get(0).toString(), (boolean) row.get(1));
                        if(!el.getStatus()){
                            cbElectionName.addItem(el.getElectionName());
                        }
                    }
                }
        
                fd = new fileDatabase("Voter");
                temp = fd.recovery();
                if(temp != null){
                    for(int i = 0; i < temp.size(); i++){
                        Vector row = temp.get(i);
                        user<String, String, String> v = new user(row.get(0), row.get(1), row.get(2));
                        cbVoterName.addItem(v.getName());
                    }
                }
        
                DefaultTableModel model = (DefaultTableModel) tableVoter.getModel();
                fd = new fileDatabase("ElectionManagement");
                temp = fd.recovery();
                if(temp != null){
                    for(int i = 0; i < temp.size(); i++){
                        Vector row = temp.get(i);
                        model.addRow(new Object[]{row.get(0), row.get(1), row.get(2)});    
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
                new loginFrame().setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void cbElectionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbElectionNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbElectionNameActionPerformed

    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked
        new viewElectionManagementFrame(this.vo).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnViewMouseClicked

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        new adminDashboardFrame(this.vo).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new electionManagementFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClose;
    private javax.swing.JLabel btnView;
    private javax.swing.JComboBox<String> cbElectionName;
    private javax.swing.JComboBox<String> cbVoterName;
    private javax.swing.JTable tableVoter;
    // End of variables declaration//GEN-END:variables
}
