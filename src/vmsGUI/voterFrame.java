
package vmsGUI;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vms.fileAdmin;
import vms.fileDatabase;
import vms.user;


public class voterFrame extends javax.swing.JFrame {

    user vo;
    
    public voterFrame() {
        initComponents();
    }
    
    public voterFrame(user vo) {
        initComponents();
        this.vo = vo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        tableHiddenVoter = new javax.swing.JTable();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JButton btnDelete = new javax.swing.JButton();
        javax.swing.JButton btnAdd = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tableVoter = new javax.swing.JTable();
        btnClose = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfUsername = new javax.swing.JTextField();
        tfPassword = new javax.swing.JTextField();

        tableHiddenVoter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableHiddenVoter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Voter Name", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHiddenVoter.setGridColor(new java.awt.Color(0, 0, 0));
        tableHiddenVoter.setMinimumSize(new java.awt.Dimension(40, 0));
        tableHiddenVoter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHiddenVoterMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableHiddenVoter);
        if (tableHiddenVoter.getColumnModel().getColumnCount() > 0) {
            tableHiddenVoter.getColumnModel().getColumn(0).setResizable(false);
            tableHiddenVoter.getColumnModel().getColumn(1).setResizable(false);
            tableHiddenVoter.getColumnModel().getColumn(2).setResizable(false);
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Voter");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(16, 161, 157));

        jPanel2.setBackground(new java.awt.Color(250, 243, 227));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        btnDelete.setBackground(new java.awt.Color(216, 84, 105));
        btnDelete.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(250, 243, 227));
        btnDelete.setText("DELETE");
        btnDelete.setToolTipText("");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(79, 193, 132));
        btnAdd.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(250, 243, 227));
        btnAdd.setText("ADD");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bebas", 1, 62)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Voter");

        jLabel4.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel4.setText("Username");

        jLabel5.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel6.setText("Voter Name");

        tableVoter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableVoter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Voter Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableVoter.setGridColor(new java.awt.Color(0, 0, 0));
        tableVoter.setMinimumSize(new java.awt.Dimension(40, 0));
        tableVoter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableVoterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableVoter);
        if (tableVoter.getColumnModel().getColumnCount() > 0) {
            tableVoter.getColumnModel().getColumn(0).setResizable(false);
        }

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Close.png"))); // NOI18N
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        tfName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        tfName.setToolTipText("");
        tfName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        tfUsername.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        tfUsername.setToolTipText("");
        tfUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        tfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsernameActionPerformed(evt);
            }
        });

        tfPassword.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        tfPassword.setToolTipText("");
        tfPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        tfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnClose))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUsernameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        user<String, String, String> v = new user(tfName.getText(), tfUsername.getText(), tfPassword.getText());
        if(v.getName().isEmpty() || v.getUname().isEmpty() || v.getPass().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter text to all forms", "Empty Forms", JOptionPane.ERROR_MESSAGE);
        }
        else{
            DefaultTableModel model1 = (DefaultTableModel) tableVoter.getModel();
            DefaultTableModel model2 = (DefaultTableModel) tableHiddenVoter.getModel();
            boolean check = false;
            fileAdmin fa = new fileAdmin();
            user<String, String, String> admin = fa.getObj(); 
            if(v.isSameName(admin.getName()) || v.isSameUname(admin.getUname())){
                check = true;
            }
            if(check){
                JOptionPane.showMessageDialog(this, (v.getUname()+ " already registered!"), "Voter Name Already Registered", JOptionPane.ERROR_MESSAGE);
            }
            else{
                for(int i = 0; i < model1.getRowCount(); i++){
                    if(v.getName().equals(model1.getValueAt(i, 0))){
                        check = true;
                        break;
                    }
                }
                if(check){
                    JOptionPane.showMessageDialog(this, (v.getName()+ " already registered!"), "Voter Name Already Registered", JOptionPane.ERROR_MESSAGE);
                }
                else{
                    check = false;
                    for(int i = 0; i < model2.getRowCount(); i++){
                        if(v.getUname().equals(model2.getValueAt(i, 1))){
                            check = true;
                            break;
                        }
                    }
                    if(check){
                        JOptionPane.showMessageDialog(this, (v.getUname()+ " already used!"), "Username Already Used", JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        model1.addRow(new Object[]{v.getName()});
                        model2.addRow(new Object[]{v.getName(), v.getUname(), v.getPass()});
                        tfName.setText("");
                        tfUsername.setText("");
                        tfPassword.setText("");
                        fileDatabase fd = new fileDatabase(model2.getDataVector(), "Voter");
                        fd.saveFile();
                        JOptionPane.showMessageDialog(this, "Add Voter Success", "Add Voter Success", JOptionPane.PLAIN_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPasswordActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tableVoter.getSelectedRow();
        if(row >= 0){
            DefaultTableModel model1 = (DefaultTableModel) tableVoter.getModel();
            DefaultTableModel model2 = (DefaultTableModel) tableHiddenVoter.getModel();
            user v = new user(model2.getValueAt(row, 0), model2.getValueAt(row, 1), model2.getValueAt(row, 2));
            model1.removeRow(row);
            model2.removeRow(row);
            tfName.setText("");
            tfUsername.setText("");
            tfPassword.setText("");
            fileDatabase fd = new fileDatabase(model2.getDataVector(), "Voter");
            fd.saveFile();
            
            fd = new fileDatabase("ElectionManagement");
            Vector<Vector> temp = fd.recovery();
            if(temp != null){
                for(int i = 0; i < temp.size(); i++){
                    Vector rt = temp.get(i);
                    if(v.isSameName(rt.get(1).toString())){
                        temp.remove(i);
                        i--;
                    }
                }
                fd = new fileDatabase(temp, "ElectionManagement");
                fd.saveFile();
            }
            JOptionPane.showMessageDialog(this, "Delete Success", "Delete Success", JOptionPane.PLAIN_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(this, "No row is selected!", "No Selected row", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableVoterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableVoterMouseClicked
        
    }//GEN-LAST:event_tableVoterMouseClicked

    private void tableHiddenVoterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHiddenVoterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableHiddenVoterMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(this.vo == null){
            JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
            new loginFrame().setVisible(true);
            this.dispose();
        }
        else{
            fileAdmin fa = new fileAdmin();
            user<String, String, String> admin = fa.getObj(); 
            if(vo.isSameName(admin.getName()) && vo.isSameUname(admin.getUname()) && vo.isSamePass(admin.getPass())){
                DefaultTableModel model1 = (DefaultTableModel) tableVoter.getModel();
                DefaultTableModel model2 = (DefaultTableModel) tableHiddenVoter.getModel();
                fileDatabase fd = new fileDatabase("Voter");
                Vector<Vector> temp = fd.recovery();
                if(temp != null){
                    for(int i = 0; i < temp.size(); i++){
                        Vector row = temp.get(i);
                        model1.addRow(new Object[]{row.get(0)});
                        model2.addRow(new Object[]{row.get(0), row.get(1), row.get(2)});
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
                new loginFrame().setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        new adminDashboardFrame(this.vo).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new voterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClose;
    private javax.swing.JTable tableHiddenVoter;
    private javax.swing.JTable tableVoter;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private fileDatabase fileDatabase(Vector<Vector> dataVector, String voter) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
