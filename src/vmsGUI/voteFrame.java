package vmsGUI;

import java.util.Vector;
import javax.swing.JOptionPane;
import vms.candidate;
import vms.election;
import vms.electionCandidate;
import vms.electionCount;
import vms.electionManagement;
import vms.fileDatabase;
import vms.user;

public class voteFrame extends javax.swing.JFrame {

    private user vo;
            
    public voteFrame() {
        initComponents();
    }
    
    public voteFrame(user v) {
        initComponents();
        this.vo = v;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JButton btnVote = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        cbCandidate = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        cbElectionName = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taContent = new javax.swing.JTextArea();
        btnClose = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vote");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(16, 161, 157));

        jPanel2.setBackground(new java.awt.Color(250, 243, 227));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        btnVote.setBackground(new java.awt.Color(247, 149, 67));
        btnVote.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        btnVote.setForeground(new java.awt.Color(250, 243, 227));
        btnVote.setText("Vote");
        btnVote.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnVote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bebas", 1, 62)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vote");

        cbCandidate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cbCandidate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cbCandidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCandidateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel2.setText("Election Name");

        cbElectionName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cbElectionName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cbElectionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbElectionNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel4.setText("Content");

        jLabel5.setFont(new java.awt.Font("Gontserrat Medium", 0, 24)); // NOI18N
        jLabel5.setText("Candidate");

        taContent.setColumns(20);
        taContent.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        taContent.setRows(1);
        taContent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jScrollPane1.setViewportView(taContent);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Close.png"))); // NOI18N
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnClose)
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnVote, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(185, 185, 185))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbElectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClose)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbElectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVote, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(this.vo == null){
            JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
            new loginFrame().setVisible(true);
            this.dispose();
        }
        else{
            fileDatabase fd = new fileDatabase("Voter");
            Vector<Vector> temp = fd.recovery();
            boolean check = false; 
            for(int i = 0; i < temp.size(); i++){
                Vector row = temp.get(i);
                if(vo.isSameName(row.get(0).toString()) && vo.isSameUname(row.get(1).toString()) && vo.isSamePass(row.get(2).toString())){
                    check = true;
                    break;
                }    
            }
            if(check){
                fd = new fileDatabase("ElectionManagement");
                temp = fd.recovery();
                if(temp != null){
                    for(int i = 0; i < temp.size(); i++){
                        Vector row = temp.get(i);
                        electionManagement<String> em = new electionManagement(row.get(0).toString(), row.get(1), (boolean) row.get(2));
                        if(vo.isSameName(em.getVoterName()) && (!em.getStatus())){
                            cbElectionName.addItem(em.getElectionName().toString());
                        }
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Illegal Trespassing", "Illegal Trespassing", JOptionPane.ERROR_MESSAGE);
                new loginFrame().setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void cbElectionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbElectionNameActionPerformed
        if(cbElectionName.getSelectedItem() == null){
            cbCandidate.removeAllItems();
            taContent.setText("");
        }
        else{
            election el = new election(cbElectionName.getSelectedItem().toString(), true);
            fileDatabase fd = new fileDatabase("Candidate");
            Vector<Vector> temp = fd.recovery();
            cbCandidate.removeAllItems();
            if(temp != null){
                for(int i = 0; i < temp.size(); i++){
                    Vector row = temp.get(i);
                    electionCandidate ec = new electionCandidate(row.get(0).toString(), row.get(1).toString(), row.get(2).toString(), (int) row.get(3));
                    if(ec.isSameElectionName(el.getElectionName())){
                        cbCandidate.addItem(ec.getTitle().toString());
                    }
                }
            }
        }
    }//GEN-LAST:event_cbElectionNameActionPerformed

    private void btnVoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoteActionPerformed
        if(cbElectionName.getSelectedItem() == null || cbCandidate.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Empty Candidate", "Empty Candidate", JOptionPane.ERROR_MESSAGE);
        }
        else{
            candidate ca = new candidate(cbElectionName.getSelectedItem().toString(), cbCandidate.getSelectedItem().toString(), "");
            fileDatabase fd = new fileDatabase("Candidate");
            Vector<Vector> temp = fd.recovery();
            for(int i = 0; i < temp.size(); i++){
                Vector row = temp.get(i);
                electionCandidate ec = new electionCandidate(row.get(0).toString(), row.get(1).toString(), row.get(2).toString(), (int) row.get(3));
                if(ec.isSameElectionName(ca.getElectionName()) && ec.isSameTitle(ca.getTitle())){
                    ec.addSum();
                    row.set(3, ec.getSum());
                    temp.set(i, row);
                    break;
                }
            }
            fd = new fileDatabase(temp, "Candidate");
            fd.saveFile();
            
            fd = new fileDatabase("ElectionManagement");
            temp = fd.recovery();
            for(int i = 0; i < temp.size(); i++){
                Vector row = temp.get(i);
                electionManagement em = new electionManagement(row.get(0).toString(), row.get(1).toString(), (boolean) row.get(2));
                if(ca.isSameElectionName(em.getElectionName()) && vo.isSameName(em.getVoterName())){
                    em.closeElection();
                    row.set(2, em.getStatus());
                    temp.set(i, row);
                    break;
                }   
            }
            fd = new fileDatabase(temp, "ElectionManagement");
            fd.saveFile();
            
            fd = new fileDatabase("Election");
            temp = fd.recovery();
            for(int i = 0; i < temp.size(); i++){
                Vector row = temp.get(i);
                electionCount elc = new electionCount(row.get(0).toString(), (boolean) row.get(1), (int) row.get(2), (int) row.get(3));
                if(ca.isSameElectionName(elc.getElectionName())){
                    elc.addVoted();
                    row.set(3, elc.getVoted());
                    temp.set(i, row);
                    break;
                }
            }
            fd = new fileDatabase(temp, "Election");
            fd.saveFile();
            
            try{
                cbElectionName.removeItem(ca.getElectionName());
                cbCandidate.removeAllItems();
                taContent.setText("");
            }
            catch(NullPointerException E){}
            JOptionPane.showMessageDialog(this, "Vote Success", "Vote Success", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_btnVoteActionPerformed

    private void cbCandidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCandidateActionPerformed
        if(cbElectionName.getSelectedItem() == null || cbCandidate.getSelectedItem() == null){
            taContent.setText("");
        }
        else{
            candidate ca = new candidate(cbElectionName.getSelectedItem().toString(), cbCandidate.getSelectedItem().toString(), "");
            fileDatabase fd = new fileDatabase("Candidate");
            Vector<Vector> temp = fd.recovery();
            taContent.removeAll();
            if(temp != null){
                for(int i = 0; i < temp.size(); i++){
                    Vector row = temp.get(i);
                    candidate tc = new candidate(row.get(0).toString(), row.get(1).toString(), row.get(2).toString());
                    if(ca.isSameElectionName(tc.getElectionName()) && ca.isSameTitle(tc.getTitle())){
                        taContent.setText(tc.getContent().toString());
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_cbCandidateActionPerformed

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        new userFrame(this.vo).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new voteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClose;
    private javax.swing.JComboBox<String> cbCandidate;
    private javax.swing.JComboBox<String> cbElectionName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taContent;
    // End of variables declaration//GEN-END:variables
}
